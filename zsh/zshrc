# .zshrc
# ======

# zplug           {{{
# ===================
if [[ ! -s "${ZDOTDIR:-$HOME}/.zplug/init.zsh" ]]; then
  echo -e "\033[0;31m zplug is not installed; please update dotfiles !"
  echo -e "\033[0;33m  e.g. $ dotfiles update\n\
       $ cd ~/.dotfiles && python install.py"
  echo -e "\033[0m"
  return
fi

source "${ZDOTDIR:-$HOME}/.zplug/init.zsh";

# Source the Prezto configuration file.
if [[ -s "${ZDOTDIR:-$HOME}/.zpreztorc" ]]; then
  source "${ZDOTDIR:-$HOME}/.zpreztorc"
fi

# ------------------------------------------------------
# zplug plugin definition {{{

# Use legacy prezto modules until I complete migration.
zplug "modules/environment", from:prezto
zplug "modules/terminal", from:prezto
zplug "modules/editor", from:prezto
zplug "modules/history", from:prezto
zplug "modules/directory", from:prezto
zplug "modules/spectrum", from:prezto
zplug "modules/utility", from:prezto
zplug "modules/archive", from:prezto
#zplug "modules/prompt", from:prezto
zplug "modules/rsync", from:prezto
zplug "modules/completion", from:prezto
zplug "modules/syntax-highlighting", from:prezto
zplug "modules/fasd", from:prezto, defer:2
zplug "modules/git", from:prezto

zplug "modules/ruby", from:prezto, if:"(( $+commands[ruby] ))"
zplug "modules/node", from:prezto, if:"(( $+commands[node] ))"


# Dirty hacks for Prezto:
# @see https://github.com/zplug/zplug/issues/373
zstyle ":prezto:module:completion" loaded 'yes'

# virtualenvwrapper -- use lazy load now (see prezto#669)
if (( $+commands[virtualenvwrapper_lazy.sh] )); then
    source "$commands[virtualenvwrapper_lazy.sh]"
fi

# ZSH theme
zplug "mafredri/zsh-async", from:github
zplug "wookayin/pure", use:pure.zsh, from:github, as:theme

# More ZSH widgets and utilities
zplug 'zsh-users/zsh-autosuggestions'
# zplug 'MichaelAquilina/zsh-autoswitch-virtualenv'

# Additional zplug from ~/.zshrc.local
if [[ -s "${ZDOTDIR:-$HOME}/.zshrc.local" ]]; then
  source "${ZDOTDIR:-$HOME}/.zshrc.local"
fi

# ------------------------------------------------------ }}}

# Install plugins if there are plugins that have not been installed
if [[ -o interactive ]] && ! zplug check; then
    # show the list of plugins whose installation are incomplete
    zplug check --verbose

    printf "Install zplug plugins? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# Then, source plugins and add commands to $PATH
zplug load #--verbose

# }}} ===================


# Source after-zplug zsh script files.
for config_file (${ZDOTDIR:-$HOME}/.zsh/zsh.d/*.zsh(N)) source $config_file

# Terminal
# Use screen-256color (for tmux, too)
export TERM="screen-256color"

# iTerm integration (for OS X iTerm2)
# @see https://iterm2.com/shell_integration.html
if [[ "`uname`" == "Darwin" ]] && [[ -f ${HOME}/.iterm2_shell_integration.zsh ]]; then
    source ${HOME}/.iterm2_shell_integration.zsh
fi

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
